@import (reference) "../references.less";

/**
 * Grid Container
 *
 * This mixin allow to define div as size reference for children who used .grid() mixin.
 * ex:
 * .wrapper {
 *    .gridContainer();
 * }
 * .child {
 *    .grid(width, 2);
 * }
 *
 */
.gridContainer(@max-width: @grid-max-width) {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  max-width: @max-width;
}

/**
 * Use .grid() mixin on every selector
 *
 * @param selector {CSS selector}: Choose any selector who can have number value
 * @param column-number {number}: Grid column number to apply to this selector
 * @param reference {number|string}: Select parent reference. Is 100% if you need to be relative to parent element size.
 * @param include-last-gutter {boolean}: Allow to add one gutter size in calc
 *
 * ex:
 *  .grid(width, 3);
 *  .grid(margin-left, 2);
 */
.grid(@selector, @column-number, @reference: 100%, @include-last-gutter: false) {
  & when (@include-last-gutter = false) {
    @{selector}: ~"calc(
    (
      (@{reference} / @{grid-column-number}) * @{column-number})
      +
      (@{grid-gutter-size}px / @{grid-column-number} * @{column-number})
      -
      @{grid-gutter-size}px
    )
  ";
  }
  // with last gutter
  & when (@include-last-gutter = true) {
    @{selector}: ~"calc(
    (
      (@{reference} / @{grid-column-number}) * @{column-number})
      +
      (@{grid-gutter-size}px / @{grid-column-number} * @{column-number})
    )
  ";
  }
}
